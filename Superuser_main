

# Add before the main installation logic
if ! check_device_compatibility; then
    read -p "Device compatibility check failed. Continue anyway? (y/N) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# Modify the installation loop to include error handling
for su_path in "${su_paths[@]}"; do
    dir=$(dirname "$su_path")
    if ! mkdir -p "$dir" 2>/dev/null; then
        handle_installation_error 1 "Failed to create directory $dir"
        continue
    fi
    
    if ! cp su-armv7 "$su_path" 2>/dev/null; then
        handle_installation_error 2 "Failed to copy su to $su_path"
        continue
    fi
    
    chmod 6755 "$su_path" || handle_installation_error 2 "Failed to set permissions for $su_path"
    chown root:root "$su_path" || handle_installation_error 2 "Failed to set ownership for $su_path"
done

#!/bin/bash
set -e

# Android Superuser Setup Script (for ARMv7 devices/tablets)
# This script clones, compiles, and installs the su binary,
# and places it in all standard Android superuser locations, from / to /0.

# Ensure running as root
if [ "$EUID" -ne 0 ]; then
    echo "Script requires root. Re-running with su..."
    exec su -c "$0 $*"
fi

# Set NDK Version and download location
NDK_VERSION="r25c"
NDK_URL="https://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-linux.zip"
NDK_DIR="/data/local/tmp/android-ndk-${NDK_VERSION}"

if [ ! -d "$NDK_DIR" ]; then
    echo "Downloading Android NDK $NDK_VERSION..."
    wget "$NDK_URL" -O /data/local/tmp/android-ndk.zip || { echo "Failed to download NDK."; exit 1; }
    echo "Extracting NDK..."
    unzip /data/local/tmp/android-ndk.zip -d /data/local/tmp/ || { echo "Failed to extract NDK."; exit 1; }
fi

export NDK="$NDK_DIR"
export PATH="$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH"

# Clone phhusson/superuser if not present
cd /data/local/tmp
if [ ! -d "superuser" ]; then
    git clone https://github.com/phhusson/superuser.git || { echo "Git clone failed."; exit 1; }
fi

cd superuser/su

# Compile su for armv7 (API 21+)
if ! armv7a-linux-androideabi21-clang su.c -o su-armv7; then
    echo "Compilation failed."
    exit 1
fi

echo "su binary built at $(pwd)/su-armv7"

# Define all standard Android su locations (including / to /0)
su_paths=(
    /system/bin/su
    /system/xbin/su
    /sbin/su
    /su/bin/su
    /su/xbin/su
    /system/sbin/su
    /magisk/.core/bin/su
    /debug_ramdisk/su
    /sbin/bin/su
    /system/su
    /system/xbin/daemonsu
    /system/xbin/busybox
    /su
    /xbin/su
    /bin/su
    /0/su
)

# Remount /system as rw if possible (may fail on modern devices)
mount | grep ' /system ' && mount -o remount,rw /system || echo "Warning: Could not remount /system as rw. Skipping."

# Copy and set permissions for all su locations
for su_path in "${su_paths[@]}"; do
    dir=$(dirname "$su_path")
    # Create directory if it doesn't exist
    if [ ! -d "$dir" ]; then
        mkdir -p "$dir" || { echo "Failed to create $dir"; continue; }
        chmod 755 "$dir"
    fi
    # Copy su binary
    cp su-armv7 "$su_path" && echo "Copied su to $su_path" || { echo "Failed to copy su to $su_path"; continue; }
    chmod 6755 "$su_path" || echo "Failed to set permissions for $su_path"
    chown root:root "$su_path" || echo "Failed to set ownership for $su_path"
done

# Remount /system as ro for safety
mount | grep ' /system ' && mount -o remount,ro /system || true

echo "Superuser binary installed to all standard locations."

# Backup recommendation
echo "It is strongly recommended that you backup your system partition before running this script."
echo "For example: adb pull /system /path/to/backup/location"

# Test su binary
echo "Testing su binary:"
for su_path in "${su_paths[@]}"; do
    if [ -f "$su_path" ]; then
        "$su_path" -v || echo "Could not execute $su_path"
    fi
done

echo "Script completed."
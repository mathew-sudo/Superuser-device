name: Superuser CI Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_level:
        description: 'Test level to run'
        required: true
        default: 'full'
        type: choice
        options:
        - quick
        - full
        - extended

env:
  ANDROID_NDK_VERSION: r25c
  ANDROID_API_LEVEL: 29
  TEST_TIMEOUT: 300
  DEBIAN_FRONTEND: noninteractive

jobs:
  lint-and-validate:
    runs-on: ubuntu-latest
    name: Lint and Validate Scripts
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck file bc yamllint dos2unix
    
    - name: Fix Line Endings
      run: |
        find . -name "*.sh" -o -name "Superuser_main" | xargs dos2unix
    
    - name: Lint Bash Scripts
      run: |
        echo "Running ShellCheck on Superuser_main..."
        shellcheck -e SC1091,SC2034,SC2086,SC2155,SC2181 Superuser_main
        echo "✓ ShellCheck passed"
    
    - name: Validate Script Syntax
      run: |
        echo "Validating bash syntax..."
        bash -n Superuser_main
        bash -n fix_critical_issues.sh || echo "⚠ fix_critical_issues.sh not found"
        echo "✓ Syntax validation passed"
    
    - name: Validate YAML Files
      run: |
        echo "Validating YAML syntax..."
        find . -name "*.yml" -o -name "*.yaml" | xargs yamllint -d relaxed
        echo "✓ YAML validation passed"
    
    - name: Check Required Functions
      run: |
        echo "Checking for required functions..."
        required_funcs=("main" "log" "interactive_mode" "secure_root_check" "check_system_info")
        for func in "${required_funcs[@]}"; do
          if grep -q "^${func}()" Superuser_main; then
            echo "✓ Found function: $func"
          else
            echo "⚠ Missing function: $func"
          fi
        done

  security-scan:
    runs-on: ubuntu-latest
    name: Security Scan
    needs: [lint-and-validate]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Security Analysis
      run: |
        echo "Checking for security vulnerabilities..."
        grep -n "exec\|eval\|system" Superuser_main || echo "✓ No dangerous functions found"
        grep -n "rm -rf\|dd if=" Superuser_main || echo "✓ No destructive commands found"
        echo "✓ Security scan completed"
    
    - name: Check for Hardcoded Credentials
      run: |
        echo "Scanning for potential credentials..."
        grep -i "password\|secret\|key\|token" Superuser_main || echo "✓ No hardcoded credentials found"
    
    - name: Check File Permissions
      run: |
        echo "Checking file permissions..."
        chmod +x Superuser_main fix_critical_issues.sh || true
        if [[ -f "Superuser_main" && -x "Superuser_main" ]]; then
          echo "✓ Main script is executable"
        else
          echo "⚠ Main script may not be executable"
        fi

  quick-test:
    runs-on: ubuntu-latest
    name: Quick Functionality Test
    needs: [lint-and-validate, security-scan]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Critical Issues Fix
      run: |
        chmod +x fix_critical_issues.sh
        ./fix_critical_issues.sh
    
    - name: Test Script Execution
      run: |
        echo "Testing script execution in dry-run mode..."
        export DRY_RUN=1
        export SKIP_ROOT_CHECK=1
        export LOG_DIR="./test-logs"
        mkdir -p "$LOG_DIR"
        
        chmod +x Superuser_main
        timeout 60 bash Superuser_main check
        timeout 60 bash Superuser_main setup
        echo "✓ Basic execution tests passed"
    
    - name: Test Interactive Commands
      run: |
        echo "Testing command help..."
        export DRY_RUN=1
        export SKIP_ROOT_CHECK=1
        ./Superuser_main --help || ./Superuser_main help || echo "Help command tested"
    
    - name: Upload Test Logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-logs-${{ github.run_id }}
        path: test-logs/
        retention-days: 7

  compatibility-test:
    runs-on: ubuntu-latest
    name: Compatibility Test
    needs: [quick-test]
    strategy:
      matrix:
        shell: [bash, dash]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Test Shell Compatibility
      run: |
        echo "Testing with ${{ matrix.shell }}..."
        export DRY_RUN=1
        export SKIP_ROOT_CHECK=1
        export LOG_DIR="./test-logs-${{ matrix.shell }}"
        mkdir -p "$LOG_DIR"
        
        chmod +x Superuser_main
        timeout 30 ${{ matrix.shell }} Superuser_main check || echo "Shell compatibility issue detected"

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality Check
    needs: [lint-and-validate]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Count Lines of Code
      run: |
        echo "Code metrics:"
        wc -l Superuser_main
        echo "Functions count: $(grep -c '^[a-zA-Z_][a-zA-Z0-9_]*()' Superuser_main)"
        echo "Comments count: $(grep -c '^#' Superuser_main)"
    
    - name: Check for TODOs and FIXMEs
      run: |
        echo "Checking for TODOs and FIXMEs..."
        grep -n "TODO\|FIXME\|XXX" Superuser_main || echo "✓ No pending tasks found"

  performance-test:
    runs-on: ubuntu-latest
    name: Performance Test
    needs: [quick-test]
    if: github.event.inputs.test_level == 'extended'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Performance Benchmark
      run: |
        echo "Running performance tests..."
        export DRY_RUN=1
        export SKIP_ROOT_CHECK=1
        export LOG_DIR="./perf-logs"
        mkdir -p "$LOG_DIR"
        
        chmod +x Superuser_main
        time timeout 120 bash Superuser_main benchmark || echo "Performance test completed"
    
    - name: Upload Performance Logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: performance-logs-${{ github.run_id }}
        path: perf-logs/
        retention-days: 3
